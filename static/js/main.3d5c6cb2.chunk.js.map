{"version":3,"sources":["App.module.scss","pages/index.module.scss","pages/Block.tsx","pages/Page.tsx","pages/common.ts","libs/point.ts","pages/Point.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","Block","name","sketch","$box","useRef","useEffect","p5","current","className","styles","title","block","ref","Pages","blocks","map","renderFunction","key","p","setup","createCanvas","ellipseMode","RADIUS","rectMode","CORNERS","background","stroke","noFill","sketchFunction","VisualPoint","x","y","w","c","this","strokeWeight","point","Point","points","i","random","width","height","color","forEach","display","Page","PAGES","App","useState","activePage","setActivePage","page","header","homeLink","href","link","menu","Object","keys","classNames","menuItem","onClick","content","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3d5c6cb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2CSG3\",\"page\":\"App_page__1AVsN\",\"header\":\"App_header__2L3DO\",\"homeLink\":\"App_homeLink__2YGNC\",\"link\":\"App_link__1t642\",\"menu\":\"App_menu__z3ViC\",\"menuItem\":\"App_menuItem__CWTjr\",\"menuItem--active\":\"App_menuItem--active__3cwcT\",\"content\":\"App_content__1Wt3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"pages_root__1Z3IK\",\"title\":\"pages_title__2KEGW\",\"block\":\"pages_block__39UWT\"};","import React, { FC, useRef, useEffect } from 'react';\nimport styles from './index.module.scss';\nimport p5 from 'p5';\n\ninterface BlockProps {\n  name: string;\n  sketch: (p: p5) => void;\n}\nconst Block: FC<BlockProps> = ({ name = '', sketch = () => {} }) => {\n  const $box = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    new p5(sketch, $box.current as HTMLElement);\n  }, [sketch]);\n  return (\n    <div>\n      <h3 className={styles.title}>{name}</h3>\n      <div className={styles.block} ref={$box}></div>\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { Fragment, FC } from 'react';\nimport Block from './Block';\nimport { setup } from './common';\nimport p5 from 'p5';\n\ntype RenderFunction = (p: p5) => void;\n\ninterface BlockProps {\n  name: string;\n  renderFunction: RenderFunction;\n}\n\ninterface PagesProps {\n  blocks: BlockProps[];\n}\n\nconst Pages: FC<PagesProps> = ({ blocks = [] }) => {\n  const sketchFunction = (p: p5, renderFunction: RenderFunction) => {\n    p.setup = () => {\n      setup(p);\n      renderFunction(p);\n    };\n  };\n\n  return (\n    <Fragment>\n      {blocks.map(({ name, renderFunction }) => (\n        <Block\n          key={name}\n          name={name}\n          sketch={(p) => {\n            sketchFunction(p, renderFunction);\n          }}\n        />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Pages;\n","import p5 from 'p5';\nexport const setup = (p: p5) => {\n  p.createCanvas(400, 400);\n  p.ellipseMode(p.RADIUS);\n  p.rectMode(p.CORNERS);\n  p.background('#111111');\n  p.stroke(255);\n  p.noFill();\n};\n","import p5, { Color } from 'p5';\n\nexport class Point {\n  x: number;\n  y: number;\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  // 复制一个点\n  copy(): Point {\n    return new Point(this.x, this.y);\n  }\n}\n\nexport class VisualPoint extends Point {\n  w: number;\n  c: Color;\n  constructor(x: number = 0, y: number = 0, w: number, c: Color) {\n    super(x, y);\n    this.w = w;\n    this.c = c;\n  }\n\n  // 绘制点\n  display(p: p5): void {\n    p.stroke(this.c);\n    p.strokeWeight(this.w);\n    p.point(this.x, this.y);\n  }\n}\n","import React, { Fragment } from 'react';\nimport Page from './Page';\nimport p5 from 'p5';\nimport { VisualPoint } from '../libs/point';\nconst POINT_NUM = 1000;\n\nconst RandomPoints = {\n  name: 'Random Points',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM; i++) {\n      const x = p.random(p.width);\n      const y = p.random(p.height);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst RandomPoints2 = {\n  name: 'Random Points 2',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM; i++) {\n      const x = p.random(p.width);\n      const random = p.random(1) ** 0.2;\n      const y = p.map(random, 0, 1, 0, p.height);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst blocks = [RandomPoints, RandomPoints2];\n\nexport default () => <Page blocks={blocks} />;\n","import React, { useState } from 'react';\nimport styles from './App.module.scss';\nimport classNames from 'classnames';\nimport Point from './pages/Point';\n\nconst PAGES = {\n  Point: <Point />,\n  // Vector: undefined,\n  // Line: undefined,\n  // Circle: undefined,\n  // Triangle: undefined,\n  // Rectangle: undefined,\n  // Number: undefined,\n  // Tree: undefined,\n  // Graph: undefined,\n  // Sound: undefined,\n};\n\nfunction App() {\n  const [activePage, setActivePage] = useState('Point');\n\n  return (\n    <div className={styles.page}>\n      <header className={styles.header}>\n        <div>\n          <a className={styles.homeLink} href=\"//betsey.win\">\n            Betsey\n          </a>\n          <a className={styles.link} href=\"/\">\n            Creative Coding\n          </a>\n        </div>\n      </header>\n      <ul className={styles.menu}>\n        {Object.keys(PAGES).map((page) => (\n          <li\n            className={classNames(styles.menuItem, {\n              [styles['menuItem--active']]: page === activePage,\n            })}\n            key={page}\n            onClick={() => setActivePage(page)}\n          >\n            {page}\n          </li>\n        ))}\n      </ul>\n      <div className={styles.content}>\n        <Point />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}