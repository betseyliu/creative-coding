{"version":3,"sources":["App.module.scss","pages/index.module.scss","pages/Block.tsx","pages/Page.tsx","pages/common.ts","libs/point.ts","libs/math.ts","pages/Point.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","Block","name","sketch","codes","width","height","$box","useRef","useEffect","p5","current","useState","isCodeVisible","setCodeVisibility","className","styles","title","container","style","onClick","classNames","canvas","isHidden","ref","Pages","blocks","map","renderFunction","key","p","setup","createCanvas","ellipseMode","RADIUS","rectMode","CORNERS","background","stroke","noFill","sketchFunction","toString","Point","x","y","this","dx","dy","Math","sqrt","radian","cos","sin","VisualPoint","w","c","strokeWeight","point","polarToCartesian","radius","points","i","random","color","forEach","display","TAU","translate","count","push","num","POINT_NUM","length","pa","j","pb","dist","distance","alpha","weight","line","center","time","rotate","index","next","Page","PAGES","App","activePage","setActivePage","page","header","homeLink","href","link","menu","Object","keys","menuItem","content","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.020be7ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2CSG3\",\"page\":\"App_page__1AVsN\",\"header\":\"App_header__2L3DO\",\"homeLink\":\"App_homeLink__2YGNC\",\"link\":\"App_link__1t642\",\"menu\":\"App_menu__z3ViC\",\"menuItem\":\"App_menuItem__CWTjr\",\"menuItem--active\":\"App_menuItem--active__3cwcT\",\"content\":\"App_content__1Wt3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"pages_root__1Z3IK\",\"title\":\"pages_title__2KEGW\",\"container\":\"pages_container__1b9hx\",\"codes\":\"pages_codes__3v5hb\",\"isHidden\":\"pages_isHidden__2LyC0\",\"canvas\":\"pages_canvas__3H2eN\"};","import React, { FC, useRef, useEffect, useState } from 'react';\nimport styles from './index.module.scss';\nimport p5 from 'p5';\nimport classNames from 'classnames';\n\ninterface BlockProps {\n  name: string;\n  codes?: string;\n  sketch: (p: p5) => void;\n  width?: number;\n  height?: number;\n}\nconst Block: FC<BlockProps> = ({\n  name = '',\n  sketch = () => {},\n  codes,\n  width = 400,\n  height = 400,\n}) => {\n  const $box = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    new p5(sketch, $box.current as HTMLElement);\n  }, [sketch]);\n\n  const [isCodeVisible, setCodeVisibility] = useState(false);\n  return (\n    <div>\n      <h3 className={styles.title}>{name}</h3>\n      <div\n        className={styles.container}\n        style={{ width: `${width}px`, height: `${height}px` }}\n        onClick={() => {\n          setCodeVisibility(!isCodeVisible);\n        }}\n      >\n        <div\n          className={classNames(styles.canvas, {\n            [styles.isHidden]: isCodeVisible,\n          })}\n          ref={$box}\n        ></div>\n        <p className={styles.codes}>{codes}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { Fragment, FC } from 'react';\nimport Block from './Block';\nimport { setup } from './common';\nimport p5 from 'p5';\n\ntype RenderFunction = (p: p5) => void;\n\ninterface BlockProps {\n  name: string;\n  renderFunction: RenderFunction;\n}\n\ninterface PagesProps {\n  blocks: BlockProps[];\n}\n\nconst Pages: FC<PagesProps> = ({ blocks = [] }) => {\n  const sketchFunction = (p: p5, renderFunction: RenderFunction) => {\n    p.setup = () => {\n      setup(p, 500, 500);\n      renderFunction(p);\n    };\n  };\n  return (\n    <Fragment>\n      {blocks.map(({ name, renderFunction }) => {\n        return (\n          <Block\n            key={name}\n            name={name}\n            width={500}\n            height={500}\n            sketch={(p) => {\n              sketchFunction(p, renderFunction);\n            }}\n            codes={renderFunction.toString()}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default Pages;\n","import p5 from 'p5';\nexport const setup = (p: p5, width: number = 400, height: number = 400) => {\n  p.createCanvas(width, height);\n  p.ellipseMode(p.RADIUS);\n  p.rectMode(p.CORNERS);\n  p.background('#111111');\n  p.stroke(255);\n  p.noFill();\n};\n","import p5, { Color } from 'p5';\n\nexport class Point {\n  x: number;\n  y: number;\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  // 复制一个点\n  copy(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  // 两点之间的距离\n  distance(p: Point): number {\n    const dx = p.x - this.x;\n    const dy = p.y - this.y;\n    return Math.sqrt(dx ** 2 + dy ** 2);\n  }\n\n  // 绕着某个点旋转\n  rotate(p: Point, radian: number) {\n    const dx = this.x - p.x;\n    const dy = this.y - p.y;\n    this.x = p.x + Math.cos(radian) * dx - Math.sin(radian) * dy;\n    this.y = p.y + Math.sin(radian) * dx + Math.cos(radian) * dy;\n  }\n}\n\nexport class VisualPoint extends Point {\n  w: number;\n  c: Color;\n  constructor(x: number = 0, y: number = 0, w: number, c: Color) {\n    super(x, y);\n    this.w = w;\n    this.c = c;\n  }\n\n  // 绘制点\n  display(p: p5): void {\n    p.stroke(this.c);\n    p.strokeWeight(this.w);\n    p.point(this.x, this.y);\n  }\n}\n","interface PointProps {\n  x: number;\n  y: number;\n}\n/**\n * 极坐标转笛卡尔坐标\n * @param radius 半径\n * @param radian 弧度\n */\nexport function polarToCartesian(radius: number, radian: number): PointProps {\n  return {\n    x: Math.cos(radian) * radius,\n    y: Math.sin(radian) * radius,\n  };\n}\n","import React from 'react';\nimport Page from './Page';\nimport p5 from 'p5';\nimport { VisualPoint, Point } from '../libs/point';\nimport { polarToCartesian } from '../libs/math';\nconst POINT_NUM = 1000;\n\nconst randomPoints = {\n  name: 'Random Points',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM; i++) {\n      const x = p.random(p.width);\n      const y = p.random(p.height);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst randomPoints2 = {\n  name: 'Random Points 2',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM; i++) {\n      const x = p.random(p.width);\n      const random = p.random(1) ** 0.2;\n      const y = p.map(random, 0, 1, 0, p.height);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst randomPointsInCircle = {\n  name: 'Random Points in Circle',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM; i++) {\n      const radian = p.random(p.TAU);\n      const radius = p.random(0.4 * p.width);\n      const { x, y } = polarToCartesian(radius, radian);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n\n    p.translate(p.width / 2, p.height / 2);\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst randomPointsInCircle2 = {\n  name: 'Random Points in Circle 2',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM; i++) {\n      const radian = p.random(p.TAU);\n      const radius = p.random(1) ** 0.5 * 0.4 * p.width; // 对生成半径的随机数开方可以解决中间密，外边疏的情况\n      const { x, y } = polarToCartesian(radius, radian);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n\n    p.translate(p.width / 2, p.height / 2);\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst randomPointsInCircle3 = {\n  name: 'Random Points in Circle 3',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM; i++) {\n      const radian = p.random(p.TAU);\n      const radius = p.random(1) ** 0.1 * 0.4 * p.width; // 对生成半径的随机数开方可以解决中间密，外边疏的情况\n      const { x, y } = polarToCartesian(radius, radian);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n\n    p.translate(p.width / 2, p.height / 2);\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst equidistributionPointsInCircle = {\n  name: 'Equidistribution Points in Circle',\n  renderFunction: (p: p5) => {\n    const points: VisualPoint[] = [];\n    let radius = 10; // 初始半径\n    let radian = 0; // 初始弧度\n    const arc = 10; // 弧长间距\n    let count = 0;\n\n    while (radius < p.width / 2) {\n      const { x, y } = polarToCartesian(radius, radian);\n      const w = p.random(1, 5);\n      const c = p.color(p.random(200));\n      points.push(new VisualPoint(x, y, w, c));\n\n      const num = ~~((p.TAU * radius) / arc);\n      radian += p.TAU / num;\n      count++;\n      if (count === num) {\n        count = 0;\n        radian = 0;\n        radius += 10;\n      }\n    }\n\n    p.translate(p.width / 2, p.height / 2);\n    points.forEach((point) => point.display(p));\n  },\n};\n\nconst randomLinks = {\n  name: 'Random links',\n  renderFunction: (p: p5) => {\n    const points: Point[] = [];\n\n    for (let i = 0; i < POINT_NUM / 10; i++) {\n      const x = p.random(p.width);\n      const y = p.random(p.height);\n      points[i] = new Point(x, y);\n    }\n\n    for (let i = 0; i < points.length; i++) {\n      const pa = points[i];\n      for (let j = i; j < points.length; j++) {\n        const pb = points[j];\n        const dist = pa.distance(pb);\n\n        if (dist < p.width / 2) {\n          const alpha = p.map(dist, 0, p.width / 2, 0, 40);\n          const weight = p.map(dist, 0, p.width / 2, 2, 0);\n\n          p.stroke(p.color(255, alpha));\n          p.strokeWeight(weight);\n          p.line(pa.x, pa.y, pb.x, pb.y);\n        }\n      }\n    }\n  },\n};\n\nconst pointsCircle = {\n  name: 'Points circle',\n  renderFunction(p: p5) {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM / 2; i++) {\n      const x = p.random(p.width);\n      const y = p.random(p.height);\n      const w = 1;\n      const c = p.color(p.random(200));\n\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n\n    const center = new Point(p.width / 2, p.height / 2);\n\n    for (let time = 0; time < 100; time++) {\n      points.forEach((point) => {\n        point.rotate(center, 0.01);\n        point.display(p);\n      });\n    }\n  },\n};\n\nconst pointsRotateAroundPrevious = {\n  name: 'Points rotate around previous',\n  renderFunction(p: p5) {\n    const points: VisualPoint[] = [];\n    for (let i = 0; i < POINT_NUM / 2; i++) {\n      const x = p.random(p.width);\n      const y = p.random(p.height);\n      const w = 1;\n      const c = p.color(p.random(200));\n\n      points[i] = new VisualPoint(x, y, w, c);\n    }\n\n    for (let time = 0; time < 100; time++) {\n      points.forEach((point, index) => {\n        const next = (index + 1) % points.length;\n        point.rotate(points[next], 0.01);\n        point.display(p);\n      });\n    }\n  },\n};\nconst linksRotateAroundPrevious = {\n  name: 'links rotate around previous',\n  renderFunction(p: p5) {\n    const points: Point[] = [];\n    for (let i = 0; i < POINT_NUM / 10; i++) {\n      const x = p.random(p.width);\n      const y = p.random(p.height);\n\n      points[i] = new Point(x, y);\n    }\n\n    // 旋转规则\n    for (let time = 0; time < 20; time++) {\n      points.map((point, index) => {\n        const next = (index + 1) % points.length;\n        point.rotate(points[next], 0.01);\n      });\n      // 距离规则\n      for (let i = 0; i < points.length; i++) {\n        const pa = points[i];\n        for (let j = i; j < points.length; j++) {\n          const pb = points[j];\n          const dist = pa.distance(pb);\n          if (dist < p.width / 5) {\n            const alpha = p.map(dist, 0, p.width / 2, 0, 40);\n            const weight = p.map(dist, 0, p.width / 2, 2, 0);\n\n            p.stroke(p.color(255, alpha));\n            p.strokeWeight(weight);\n            p.line(pa.x, pa.y, pb.x, pb.y);\n          }\n        }\n      }\n    }\n  },\n};\nconst blocks = [\n  randomPoints,\n  randomPoints2,\n  randomPointsInCircle,\n  randomPointsInCircle2,\n  randomPointsInCircle3,\n  equidistributionPointsInCircle,\n  randomLinks,\n  pointsCircle,\n  pointsRotateAroundPrevious,\n  linksRotateAroundPrevious,\n];\n\nexport default () => <Page blocks={blocks} />;\n","import React, { useState } from 'react';\nimport styles from './App.module.scss';\nimport classNames from 'classnames';\nimport Point from './pages/Point';\n\nconst PAGES = {\n  Point: <Point />,\n  // Vector: undefined,\n  // Line: undefined,\n  // Circle: undefined,\n  // Triangle: undefined,\n  // Rectangle: undefined,\n  // Number: undefined,\n  // Tree: undefined,\n  // Graph: undefined,\n  // Sound: undefined,\n};\n\nfunction App() {\n  const [activePage, setActivePage] = useState('Point');\n\n  return (\n    <div className={styles.page}>\n      <header className={styles.header}>\n        <div>\n          <a className={styles.homeLink} href=\"//betsey.win\">\n            Betsey\n          </a>\n          <a className={styles.link} href=\"/\">\n            Creative Coding\n          </a>\n        </div>\n      </header>\n      <ul className={styles.menu}>\n        {Object.keys(PAGES).map((page) => (\n          <li\n            className={classNames(styles.menuItem, {\n              [styles['menuItem--active']]: page === activePage,\n            })}\n            key={page}\n            onClick={() => setActivePage(page)}\n          >\n            {page}\n          </li>\n        ))}\n      </ul>\n      <div className={styles.content}>\n        <Point />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}